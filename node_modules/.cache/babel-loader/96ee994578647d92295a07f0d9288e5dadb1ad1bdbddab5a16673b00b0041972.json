{"ast":null,"code":"var _jsxFileName = \"/home/joaob/Projetos-Trybe/sd-027-a-project-trivia-react-redux/src/components/Header.jsx\";\nimport React, { Component } from 'react';\nimport md5 from 'crypto-js/md5';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Header extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      user: {\n        name: '',\n        gravatarEmail: '',\n        image: '',\n        score: 0\n      }\n    };\n    this.getUser = () => {\n      const {\n        player: {\n          name,\n          gravatarEmail\n        }\n      } = this.props;\n      // const hash = md5(gravatarEmail).toString();\n      const image = `https://www.gravatar.com/avatar/${md5(gravatarEmail).toString()}`;\n      this.setState({\n        user: {\n          name,\n          gravatarEmail,\n          image,\n          score: 0\n        }\n      });\n    };\n  }\n  componentDidMount() {\n    this.getUser();\n  }\n  render() {\n    const {\n      user\n    } = this.state;\n    const {\n      player: {\n        score\n      }\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        \"data-testid\": \"header-player-name\",\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        \"data-testid\": \"header-score\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.image,\n        alt: \"user\",\n        \"data-testid\": \"header-profile-picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n}\nHeader.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    gravatarEmail: PropTypes.string,\n    image: PropTypes.string\n  })\n}.isRequired;\nconst mapStateToProps = _ref => {\n  let {\n    player\n  } = _ref;\n  return {\n    player\n  };\n};\nexport default connect(mapStateToProps)(Header);","map":{"version":3,"names":["React","Component","md5","connect","PropTypes","Header","state","user","name","gravatarEmail","image","score","getUser","player","props","toString","setState","componentDidMount","render","propTypes","shape","string","isRequired","mapStateToProps"],"sources":["/home/joaob/Projetos-Trybe/sd-027-a-project-trivia-react-redux/src/components/Header.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport md5 from 'crypto-js/md5';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass Header extends Component {\n  state = {\n    user: {\n      name: '',\n      gravatarEmail: '',\n      image: '',\n      score: 0,\n    },\n  };\n\n  componentDidMount() {\n    this.getUser();\n  }\n\n  getUser = () => {\n    const { player: { name, gravatarEmail } } = this.props;\n    // const hash = md5(gravatarEmail).toString();\n    const image = `https://www.gravatar.com/avatar/${md5(gravatarEmail).toString()}`;\n\n    this.setState({\n      user: {\n        name,\n        gravatarEmail,\n        image,\n        score: 0,\n      },\n    });\n  };\n\n  render() {\n    const { user } = this.state;\n    const { player: { score } } = this.props;\n    return (\n      <div>\n        <h1 data-testid=\"header-player-name\">{ user.name }</h1>\n        <h1 data-testid=\"header-score\">{ score }</h1>\n        <img src={ user.image } alt=\"user\" data-testid=\"header-profile-picture\" />\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    gravatarEmail: PropTypes.string,\n    image: PropTypes.string,\n  }),\n}.isRequired;\n\nconst mapStateToProps = ({ player }) => ({\n  player,\n});\n\nexport default connect(mapStateToProps)(Header);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,GAAG,MAAM,eAAe;AAC/B,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,SAAS,MAAM,YAAY;AAAC;AAEnC,MAAMC,MAAM,SAASJ,SAAS,CAAC;EAAA;IAAA;IAAA,KAC7BK,KAAK,GAAG;MACNC,IAAI,EAAE;QACJC,IAAI,EAAE,EAAE;QACRC,aAAa,EAAE,EAAE;QACjBC,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE;MACT;IACF,CAAC;IAAA,KAMDC,OAAO,GAAG,MAAM;MACd,MAAM;QAAEC,MAAM,EAAE;UAAEL,IAAI;UAAEC;QAAc;MAAE,CAAC,GAAG,IAAI,CAACK,KAAK;MACtD;MACA,MAAMJ,KAAK,GAAI,mCAAkCR,GAAG,CAACO,aAAa,CAAC,CAACM,QAAQ,EAAG,EAAC;MAEhF,IAAI,CAACC,QAAQ,CAAC;QACZT,IAAI,EAAE;UACJC,IAAI;UACJC,aAAa;UACbC,KAAK;UACLC,KAAK,EAAE;QACT;MACF,CAAC,CAAC;IACJ,CAAC;EAAA;EAjBDM,iBAAiB,GAAG;IAClB,IAAI,CAACL,OAAO,EAAE;EAChB;EAiBAM,MAAM,GAAG;IACP,MAAM;MAAEX;IAAK,CAAC,GAAG,IAAI,CAACD,KAAK;IAC3B,MAAM;MAAEO,MAAM,EAAE;QAAEF;MAAM;IAAE,CAAC,GAAG,IAAI,CAACG,KAAK;IACxC,oBACE;MAAA,wBACE;QAAI,eAAY,oBAAoB;QAAA,UAAGP,IAAI,CAACC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAO,eACvD;QAAI,eAAY,cAAc;QAAA,UAAGG;MAAK;QAAA;QAAA;QAAA;MAAA,QAAO,eAC7C;QAAK,GAAG,EAAGJ,IAAI,CAACG,KAAO;QAAC,GAAG,EAAC,MAAM;QAAC,eAAY;MAAwB;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACtE;EAEV;AACF;AAEAL,MAAM,CAACc,SAAS,GAAG;EACjBZ,IAAI,EAAEH,SAAS,CAACgB,KAAK,CAAC;IACpBZ,IAAI,EAAEJ,SAAS,CAACiB,MAAM;IACtBZ,aAAa,EAAEL,SAAS,CAACiB,MAAM;IAC/BX,KAAK,EAAEN,SAAS,CAACiB;EACnB,CAAC;AACH,CAAC,CAACC,UAAU;AAEZ,MAAMC,eAAe,GAAG;EAAA,IAAC;IAAEV;EAAO,CAAC;EAAA,OAAM;IACvCA;EACF,CAAC;AAAA,CAAC;AAEF,eAAeV,OAAO,CAACoB,eAAe,CAAC,CAAClB,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
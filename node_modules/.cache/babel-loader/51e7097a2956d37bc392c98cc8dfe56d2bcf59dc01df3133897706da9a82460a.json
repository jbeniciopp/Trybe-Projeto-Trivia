{"ast":null,"code":"var _jsxFileName = \"/home/joaob/Projetos-Portifolio/Trybe-Projeto-Trivia/src/components/Question.jsx\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport sanitizeHtml from 'sanitize-html';\nimport { scorePoints } from '../redux/actions/scoreAction';\nimport { questionsAPI } from '../services/questionsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Question extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      question: {},\n      // incorrect_answers: [],\n      correctAnswer: '',\n      answer: [],\n      // category: '',\n      // question: '',\n      score: 0,\n      // points: 0,\n      isClicked: false,\n      isDisabled: false,\n      timer: 30,\n      questionArray: [],\n      round: 5,\n      perguntasCertas: 0\n    };\n    this.countDowm = () => {\n      const time = 1000;\n      this.interval = setInterval(() => {\n        const {\n          timer\n        } = this.state;\n        this.setState({\n          timer: timer - 1\n        });\n        if (timer === 1) {\n          clearInterval(this.interval);\n          this.setState({\n            isDisabled: true\n          });\n        }\n      }, time);\n    };\n    this.questionapi = async () => {\n      const token = localStorage.getItem('token');\n      const questionAPI = await questionsAPI(token);\n      // console.log(questionAPI, 'questoes', token);\n      if (questionAPI.response_code !== 0) {\n        localStorage.removeItem('token');\n        const {\n          history\n        } = this.props;\n        history.push('/');\n      } else {\n        const {\n          results\n        } = questionAPI;\n        const shuffleNumber = 0.5;\n        const shuffleArray = [results[0].correct_answer, ...results[0].incorrect_answers];\n        shuffleArray.sort(() => Math.random() - shuffleNumber);\n        this.setState({\n          questionArray: results,\n          question: results[0],\n          correctAnswer: results[0].correct_answer,\n          answer: shuffleArray\n        });\n      }\n    };\n    this.newQuestion = () => {\n      const {\n        round\n      } = this.state;\n      const {\n        history\n      } = this.props;\n      this.setState({\n        isClicked: false,\n        isDisabled: false\n      });\n      if (round !== 1) {\n        return this.getNewQuestion();\n      }\n      history.push('/feedback');\n    };\n    this.getNewQuestion = () => {\n      const {\n        questionArray,\n        question\n      } = this.state;\n      const newQuestion = questionArray.filter(e => e !== question);\n      const shuffleNumber = 0.5;\n      const shuffleArray = [newQuestion[0].correct_answer, ...newQuestion[0].incorrect_answers];\n      shuffleArray.sort(() => Math.random() - shuffleNumber);\n      this.setState({\n        questionArray: newQuestion,\n        question: newQuestion[0],\n        correctAnswer: newQuestion[0].correct_answer,\n        answer: shuffleArray,\n        round: newQuestion.length,\n        timer: 30\n      });\n    };\n    this.onClickbutton = e => {\n      const {\n        dispatch\n      } = this.props;\n      const {\n        correctAnswer,\n        question: {\n          difficulty\n        },\n        timer\n      } = this.state;\n      const dez = 10;\n      const answer = e.target.innerHTML;\n      // console.log(difficulty);\n      if (difficulty === 'hard' && correctAnswer === answer) {\n        const difficultyPoints = 3;\n        const pontos = dez + timer * difficultyPoints;\n        this.setState(prevState => ({\n          score: prevState.score + pontos,\n          perguntasCertas: prevState.perguntasCertas + 1\n        }), () => {\n          const {\n            score,\n            perguntasCertas\n          } = this.state;\n          dispatch(scorePoints({\n            score,\n            assertions: perguntasCertas\n          }));\n        });\n      } else if (difficulty === 'medium' && correctAnswer === answer) {\n        const difficultyPoints = 2;\n        const pontos = dez + timer * difficultyPoints;\n        this.setState(prevState => ({\n          score: prevState.score + pontos,\n          perguntasCertas: prevState.perguntasCertas + 1\n        }), () => {\n          const {\n            score,\n            perguntasCertas\n          } = this.state;\n          dispatch(scorePoints({\n            score,\n            assertions: perguntasCertas\n          }));\n        });\n      } else if (difficulty === 'easy' && correctAnswer === answer) {\n        const difficultyPoints = 1;\n        const pontos = dez + timer * difficultyPoints;\n        this.setState(prevState => ({\n          score: prevState.score + pontos,\n          perguntasCertas: prevState.perguntasCertas + 1\n        }), () => {\n          const {\n            score,\n            perguntasCertas\n          } = this.state;\n          dispatch(scorePoints({\n            score,\n            assertions: perguntasCertas\n          }));\n        });\n      }\n      this.setState({\n        isClicked: true,\n        isDisabled: true\n      });\n    };\n  }\n  componentDidMount() {\n    this.questionapi();\n    this.countDowm();\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  render() {\n    const {\n      question,\n      correctAnswer,\n      answer,\n      isClicked,\n      isDisabled,\n      timer\n    } = this.state;\n    const clean = sanitizeHtml(question.question);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"games\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"categoria\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            \"data-testid\": \"question-category\",\n            children: question.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"pergunta\",\n          \"data-testid\": \"question-text\"\n          // dangerouslySetInnerHTML={ { __html: clean } }\n          ,\n          children: clean\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          \"data-testid\": \"answer-options\",\n          className: \"button-question\",\n          children: [answer.length > 0 && answer.map((element, idx) => {\n            const clean1 = sanitizeHtml(element);\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              \"data-testid\": correctAnswer === element ? 'correct-answer' : `wrong-answer-${idx}`,\n              type: \"button\",\n              className: (isClicked && (correctAnswer === element ? 'correct-answer' : 'wrong-answer')).toString()\n              // toString Dica do Rafael Ribeiro\n              ,\n\n              onClick: this.onClickbutton,\n              disabled: isDisabled\n              // dangerouslySetInnerHTML={ { __html: clean1 } }\n              ,\n              children: clean1\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: isClicked && /*#__PURE__*/_jsxDEV(\"button\", {\n              \"data-testid\": \"btn-next\",\n              type: \"button\",\n              onClick: this.newQuestion,\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `Tempo: ${timer}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this);\n  }\n}\nQuestion.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func\n  })\n}.isRequired;\nexport default connect()(Question);","map":{"version":3,"names":["PropTypes","React","Component","connect","sanitizeHtml","scorePoints","questionsAPI","Question","state","question","correctAnswer","answer","score","isClicked","isDisabled","timer","questionArray","round","perguntasCertas","countDowm","time","interval","setInterval","setState","clearInterval","questionapi","token","localStorage","getItem","questionAPI","response_code","removeItem","history","props","push","results","shuffleNumber","shuffleArray","correct_answer","incorrect_answers","sort","Math","random","newQuestion","getNewQuestion","filter","e","length","onClickbutton","dispatch","difficulty","dez","target","innerHTML","difficultyPoints","pontos","prevState","assertions","componentDidMount","componentWillUnmount","render","clean","category","map","element","idx","clean1","toString","propTypes","shape","func","isRequired"],"sources":["/home/joaob/Projetos-Portifolio/Trybe-Projeto-Trivia/src/components/Question.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport sanitizeHtml from 'sanitize-html';\nimport { scorePoints } from '../redux/actions/scoreAction';\nimport { questionsAPI } from '../services/questionsAPI';\n\nclass Question extends Component {\n  state = {\n    question: {},\n    // incorrect_answers: [],\n    correctAnswer: '',\n    answer: [],\n    // category: '',\n    // question: '',\n    score: 0,\n    // points: 0,\n    isClicked: false,\n    isDisabled: false,\n    timer: 30,\n    questionArray: [],\n    round: 5,\n    perguntasCertas: 0,\n  };\n\n  componentDidMount() {\n    this.questionapi();\n    this.countDowm();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  countDowm = () => {\n    const time = 1000;\n    this.interval = setInterval(() => {\n      const { timer } = this.state;\n\n      this.setState({ timer: timer - 1 });\n\n      if (timer === 1) {\n        clearInterval(this.interval);\n        this.setState({ isDisabled: true });\n      }\n    }, time);\n  };\n\n  questionapi = async () => {\n    const token = localStorage.getItem('token');\n    const questionAPI = await questionsAPI(token);\n    // console.log(questionAPI, 'questoes', token);\n    if (questionAPI.response_code !== 0) {\n      localStorage.removeItem('token');\n      const { history } = this.props;\n      history.push('/');\n    } else {\n      const { results } = questionAPI;\n      const shuffleNumber = 0.5;\n      const shuffleArray = [\n        results[0].correct_answer,\n        ...results[0].incorrect_answers,\n      ];\n\n      shuffleArray.sort(() => Math.random() - shuffleNumber);\n\n      this.setState({\n        questionArray: results,\n        question: results[0],\n        correctAnswer: results[0].correct_answer,\n        answer: shuffleArray,\n      });\n    }\n  };\n\n  newQuestion = () => {\n    const { round } = this.state;\n    const { history } = this.props;\n    this.setState({\n      isClicked: false,\n      isDisabled: false,\n    });\n    if (round !== 1) {\n      return this.getNewQuestion();\n    }\n    history.push('/feedback');\n  };\n\n  getNewQuestion = () => {\n    const { questionArray, question } = this.state;\n    const newQuestion = questionArray.filter((e) => e !== question);\n\n    const shuffleNumber = 0.5;\n    const shuffleArray = [\n      newQuestion[0].correct_answer,\n      ...newQuestion[0].incorrect_answers,\n    ];\n\n    shuffleArray.sort(() => Math.random() - shuffleNumber);\n\n    this.setState({\n      questionArray: newQuestion,\n      question: newQuestion[0],\n      correctAnswer: newQuestion[0].correct_answer,\n      answer: shuffleArray,\n      round: newQuestion.length,\n      timer: 30,\n    });\n  };\n\n  onClickbutton = (e) => {\n    const { dispatch } = this.props;\n    const { correctAnswer, question: { difficulty }, timer } = this.state;\n    const dez = 10;\n    const answer = e.target.innerHTML;\n    // console.log(difficulty);\n    if (difficulty === 'hard' && correctAnswer === answer) {\n      const difficultyPoints = 3;\n      const pontos = dez + (timer * difficultyPoints);\n      this.setState((prevState) => ({\n        score: prevState.score + pontos,\n        perguntasCertas: prevState.perguntasCertas + 1,\n      }), () => {\n        const { score, perguntasCertas } = this.state;\n        dispatch(scorePoints({\n          score,\n          assertions: perguntasCertas,\n        }));\n      });\n    } else if (difficulty === 'medium' && correctAnswer === answer) {\n      const difficultyPoints = 2;\n      const pontos = dez + (timer * difficultyPoints);\n      this.setState((prevState) => ({\n        score: prevState.score + pontos,\n        perguntasCertas: prevState.perguntasCertas + 1,\n      }), () => {\n        const { score, perguntasCertas } = this.state;\n        dispatch(scorePoints({\n          score,\n          assertions: perguntasCertas,\n        }));\n      });\n    } else if (difficulty === 'easy' && correctAnswer === answer) {\n      const difficultyPoints = 1;\n      const pontos = dez + (timer * difficultyPoints);\n      this.setState((prevState) => ({\n        score: prevState.score + pontos,\n        perguntasCertas: prevState.perguntasCertas + 1,\n      }), () => {\n        const { score, perguntasCertas } = this.state;\n        dispatch(scorePoints({\n          score,\n          assertions: perguntasCertas,\n        }));\n      });\n    }\n    this.setState({\n      isClicked: true,\n      isDisabled: true,\n    });\n  };\n\n  render() {\n    const { question, correctAnswer, answer, isClicked, isDisabled, timer } = this.state;\n    const clean = sanitizeHtml(question.question);\n    return (\n      <div className=\"games\">\n        <div className=\"game\">\n          <div className=\"categoria\">\n            <p data-testid=\"question-category\">\n              { question.category }\n            </p>\n          </div>\n          <p\n            className=\"pergunta\"\n            data-testid=\"question-text\"\n            // dangerouslySetInnerHTML={ { __html: clean } }\n          >\n            { clean }\n          </p>\n          <form\n            data-testid=\"answer-options\"\n            className=\"button-question\"\n          >\n            { answer.length > 0 && answer.map((element, idx) => {\n              const clean1 = sanitizeHtml(element);\n              return (\n                <button\n                  key={ idx }\n                  data-testid={\n                    correctAnswer === element\n                      ? 'correct-answer'\n                      : `wrong-answer-${idx}`\n                  }\n                  type=\"button\"\n                  className={\n                    (isClicked && (correctAnswer === element\n                      ? 'correct-answer'\n                      : 'wrong-answer')).toString()\n                    // toString Dica do Rafael Ribeiro\n                  }\n                  onClick={ this.onClickbutton }\n                  disabled={ isDisabled }\n                  // dangerouslySetInnerHTML={ { __html: clean1 } }\n                >\n                  { clean1 }\n                </button>\n              );\n            })}\n            <div>\n              {\n                isClicked && (\n                  <button\n                    data-testid=\"btn-next\"\n                    type=\"button\"\n                    onClick={ this.newQuestion }\n                  >\n                    Next\n                  </button>)\n              }\n            </div>\n            <p>{ `Tempo: ${timer}` }</p>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nQuestion.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n}.isRequired;\n\nexport default connect()(Question);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}